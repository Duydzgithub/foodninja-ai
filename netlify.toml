[[headers]]
  for = "/*"
  [headers.values]
    X-Content-Type-Options = "nosniff"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Content-Security-Policy = "default-src 'self' 'unsafe-inline' 'unsafe-eval' https: data: blob:; frame-ancestors 'none'"

[[headers]]
  for = "*.webmanifest"
  [headers.values]
    Content-Type = "application/manifest+json; charset=utf-8"
    Cache-Control = "public, max-age=86400"

[[headers]]
  for = "*.js"
  [headers.values]
    Cache-Control = "public, max-age=86400"

[[headers]]
  for = "*.css"
  [headers.values]
    Cache-Control = "public, max-age=86400"

[[headers]]
  for = "*.svg"
  [headers.values]
    Cache-Control = "public, max-age=86400"

[[headers]]
  for = "*.png"
  [headers.values]
    Cache-Control = "public, max-age=86400"

[[headers]]
  for = "*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=86400"

[[headers]]
  for = "*.jpeg"
  [headers.values]
    Cache-Control = "public, max-age=86400"

# API proxy to backend (update with your Render URL)
[[redirects]]
  from = "/api/*"
  to = "https://foodninja-backend.onrender.com/:splat"
  status = 200
  force = true

# Proxy direct API calls to backend
[[redirects]]
  from = "/predict"
  to = "https://foodninja-backend.onrender.com/predict"
  status = 200
  force = true

[[redirects]]
  from = "/ask_ai"
  to = "https://foodninja-backend.onrender.com/ask_ai"
  status = 200
  force = true

# Fallback for SPA routing
[[redirects]]
  from = "/*"
  to = "/index.html"
  status = 200

[build]
  publish = "."
  command = "npm install && npm run diagrams"

[build.environment]
  NODE_VERSION = "18"
